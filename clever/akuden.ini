CertainlyCode $3E7FB JumpWithParams_AfuncnoYparam
JumpTableRoutineWithAppendix $3E7FB
CertainlyCode $3E814 JumpWithParams_YfuncnoTimes2
JumpTableRoutineWithAppendix $3E814

CertainlyCode $3E2D2 SwitchBank_temporary
CertainlyCode $3E2D0 SwitchBank_savePageTo23
CertainlyCode $3E2CA SwitchBank_savePageTo23_and_PreviousTo24
CertainlyCode $3E62D SwitchBank_restorePage24
CertainlyCode $3E2C6 SwitchBankC000
CertainlyCode $3E2C4 SwitchBank_EnsureC000pointsToSecondLastPage
CertainlyCode $3E2C0 SwitchBank_EnsureC000pointsToPageAtE000
MapperChangeRoutine $3E2D2 $8000 reg A
MapperChangeRoutine $3E2D0 $8000 reg A
MapperChangeRoutine $3E2CA $8000 reg A
MapperChangeRoutine $3E62D $8000 ram $24
MapperChangeRoutine $3E2C4 $C000 const $1E
MapperChangeRoutine $3E2C0 $C000 const $07

CertainlyData $C000 UnknownDataC000
CertainlyData $E000 UnknownDataE000
CertainlyData $10000 UnknownData10000
CertainlyData $12000 UnknownData12000

CertainlyCode $3E005 Delay88cycles
CertainlyCode $307A3 Delay32cycles
CertainlyCode $30F55 Delay32cycles_copy

CertainlyCode $3E04B  Main_InfiniteLoop_UpdateRandomSeed
RAM $20 RandomSeed
RAM $1B FrameCounter
CertainlyCode $3E16C ResetPPUtoKnownState
CertainlyCode $3E151 ResetAPUtoKnownState
CertainlyCode $3E211 AnyBankTerminateSound_RestorePage
CertainlyCode $3E249 AnyBankPlayTracks_RestorePage
CertainlyCode $3E238 AnyBank_Call_Sound_NMIcallback
CertainlyCode $30850 Bank0C_PlayTracks
CertainlyCode $307AE Bank0C_TerminateSound
CertainlyCode $309E2 Bank0C_Sound_NMIcallback
CertainlyCode $3E25B AnyBank_EndSoundCall_RestorePage
CertainlyCode $3E224 NMI_SoundCodeCall
CertainlyCode $3E29B NMI_ReadOneJoypad
CertainlyCode $3E264 NMI_UpdateInput
CertainlyCode $3E280 NMI_AnalyzeCurrentInput
CertainlyCode $3E33C NMI_MapDesiredVROMpages23
CertainlyCode $3E331 NMI_MapDesiredVROMpages01
CertainlyCode $3E347 NMI_MapDesiredVROMpages4567
CertainlyCode $3E351 NMI_MapDesiredVROMpages56
CertainlyCode $3E316 NMI_MapVROMpages4567_to_7F
CertainlyCode $3E30B NMI_MapVROMpages01_to_7F
CertainlyCode $3E300 NMI_MapVROMpages23_to_7F
CertainlyCode $3E2FA NMI_MapVROMpages0123_to_7F
CertainlyCode $3E35C NMI_ExecuteCurrentPlotAction
RAM $1C NMI_InProgress
RAM $26 InSoundCode
RAM $23 CurrentPage
RAM $28 NewInput2
RAM $29 CurrentInput2
RAM $F8 NewInput1
RAM $F9 CurrentInput1
RAM $38 DesiredVROMpage0
RAM $39 DesiredVROMpage1
RAM $3A DesiredVROMpage2
RAM $3B DesiredVROMpage3
RAM $3C DesiredVROMpage4
RAM $3D DesiredVROMpage5
RAM $3E DesiredVROMpage6
RAM $3F DesiredVROMpage7

RAM $24 SavedPage
RAM $25 SoundCodeSavedPage
RAM $FF PPUdesiredRegister2000
RAM $FE PPUdesiredRegister2001
RAM $FC PPUscrollingPositionHi
RAM $FD PPUscrollingPositionLo



RAM $18 CurrentPlotAction
RAM $19 CurrentPlotAction_StateWithin
CertainlyCode $3E383 PlotAction00
CertainlyCode $3E436 PlotAction01_nothing
CertainlyCode $3E437 PlotAction02
CertainlyCode $3E449 PlotAction03
CertainlyCode $3F390 PlotAction04
CertainlyCode $3E459 PlotAction05
CertainlyCode $3E49B PlotAction06
CertainlyCode $3E539 PlotAction07
CertainlyCode $3E50E PlotAction08
CertainlyCode $3E516 PlotAction09
CertainlyCode $3E541 PlotAction0A
CertainlyCode $3E549 PlotAction0B
CertainlyCode $3E51E PlotAction0C
CertainlyCode $3E526 PlotAction0D
CertainlyCode $3E52E PlotAction0E
CertainlyCode $3E531 PlotAction0F
CertainlyCode $3E558 GotoPlotAction_A_state00
CertainlyCode $3E551 GotoNextPlotAction_state00

CertainlyCode $2E5CA MultiplyRandomSeedBy_TwoAndHalf_ReturnMod16

CertainlyCode $3E057 _NMI
CertainlyCode $3E00B _Reset
CertainlyCode $3E0F5 _IRQ
JumpTable $3FFFA $3FFFB 2 3 SystemVectorTable

CertainlyData $33D16 SoundTest_ListOfTracks
Comment       $33C6E "Increase track number"
Comment       $33C7C "Increase track number"
Comment       $33C5E "Test B key (terminate sound)"
Comment       $33C64 "Test A key (start track)"
Comment       $33C52 "Test left key (prev track)"
Comment       $33C58 "Test right key (next track)"
CertainlyCode $33C50 SoundTest_TestInput

Comment $7556 "Password entry failed, play error sound"
Comment $7539 "Check input: select or start"
Comment $7543 "Check input: select? Exit password input"
Comment $7549 "Check input: was start. Verify password"
CertainlyCode $7886 "Password_Verify_maybe"
RAM $780 Password_Cursor_Xcoord
RAM $781 Password_Cursor_Ycoord
RAM $782 Password_Cursor_PrevXcoord
RAM $783 Password_Cursor_PrevYcoord
RAM $790 Password_Contents16syms
RAM $7F8 Password_EnteredName8letters
# Contents: itemindex (0-3) + position_index*4 (0-15)
CertainlyCode $773C Password_Cursor_DrawPosition
Comment $75E9 "On even frames, calls $76BD; on odd frames, calls $76A1"
Comment $78F8 "returns 0x07 & sum (($7F8..$7FF) + [7,3,1,6,2,4,5,0])"
Comment $78F8 "which means: returns 0x07 & (sum ($7F8..$7FF)+28)"
CertainlyCode $78F8 Password_CalculateNameHash_3bits
CertainlyData $7911 NameHashAdds
RAM $10 Password_Hash3bits
CertainlyCode $78A0 Password_ClearCursor
CertainlyCode $78AD Password_ClearContents
Comment $78F8 "Symbols are: 'A-Z!? .' maps to $50-$6B,$00,$4B"
Comment $7857 "Resets tables $18 bytes at $400,$41C,$438,$454,$470,$48C,$4A8,$54E"
Comment $754E "$405 contains password data: 16 items"
Comment $754E "$401 contains items usable in password: 00,42,FC,F4"
CertainlyCode $7A0D Password_TranslateXY_into_index
Comment       $7A0D "Calculates (A & 3) + ((A & 0x30) >> 2), result in A and Y"

CertainlyCode $79BC
Certainlycode $7A03 PasswordFailedValidation_CodeA
CertainlyCode $79C5 Password_Validation_Step1
RAM $30  CurrentStage
# 00 = 1-01
# 01 = 2-01
# 02 = 2-04
# 03 = 3-00
# 04 = 3-01
# 05 = 4-0A
# 06 = 5-0A
# 07 = 6-0A
# 08 = 4-01
# 09 = 5-01
# 0A = 5-06
# 0B = 6-01
# 0C = 6-01 (yes)
# 0D = 7-01
# 0E = 7-0A
# 0F = 8-01
# 10 = 9-01
# 11 = A-01
#(12) = 7-06
#(13) = 4-0E
#(14) = 1-06
#(15) = 4-02
#(16) = 4-0E

RAM $78F PasswordKeyType
RAM $78B PasswordFailedValidationFlag
RAM $788 PasswordValue16bitLo
RAM $789 PasswordValue16bitHi
CertainlyData $7B62 PasswordKeySymbolTable
Comment $79CF "Read slots (0,0), (1,2), (3,1) i.e. slots 0,6,13"
Comment $79CF "Identify key symbol. These key symbols are:"
Comment $79CF "  $01 = slot0 whip   -> 0 ->  0 in CurrentStage, 0 in KeyType"
Comment $79CF "  $02 = slot0 cross  -> 2 ->  4 in CurrentStage, 0 in KeyType"
Comment $79CF "  $03 = slot0 heart  -> 5 -> 10 in CurrentStage, 0 in KeyType"
Comment $79CF "  $19 = slot6 whip   -> 4 ->  8 in CurrentStage, 1 in KeyType"
Comment $79CF "  $1A = slot6 cross  -> 7 -> 14 in CurrentStage, 1 in KeyType"
Comment $79CF "  $1B = slot6 heart  -> 1 ->  2 in CurrentStage, 1 in KeyType"
Comment $79CF "  $35 = slot13 whip  -> 3 ->  6 in CurrentStage, 2 in KeyType"
Comment $79CF "  $36 = slot13 cross -> 8 -> 16 in CurrentStage, 2 in KeyType"
Comment $79CF "  $37 = slot13 heart -> 6 -> 12 in CurrentStage, 2 in KeyType"
Comment $79CF "$01 = number of key symbols found."
Comment $79FA "Fail unless exactly one key symbols was found."
Comment $788B "Password validation step 1. If password OK, puts one of 2*(0-8) into CurrentStage and one of 0-2 in KeyType."
Comment       $7A01 "PasswordFailedValidation (Code 1)"
Comment       $7A4D "PasswordFailedValidation (Code 2)"
Comment       $7AA5 "PasswordFailedValidation (Code 4)"
Comment       $7ADB "PasswordFailedValidation (Code 8)"
Comment       $79B1 "PasswordFailedValidation (Code 16)"

CertainlyCode $7A1B Password_Validation_Step2
Comment $7A1B "Depending on the value of KeyType, nine slots are selected."
Comment $7A1B "If KeyType was 0, they are: 0 15 8 7 10 1 5 3 14"
Comment $7A1B "If KeyType was 1, they are: 6 4 2 14 11 7 12 9 1"
Comment $7A1B "If KeyType was 2, they are: 13 7 1 10 4 12 15 3 9"
Comment $7A1B "If a symbol was found in some slot that wasn't on this table, fail the password."
CertainlyCode $78BA Password_Analysis_CopyInto7A0
Comment $78BA "Depending on the value of KeyType, nine slots are selected."
Comment $7A1B "If KeyType was 0, they are: 0 15 8 7 10 1 5 3 14"
Comment $7A1B "If KeyType was 1, they are: 6 4 2 14 11 7 12 9 1"
Comment $7A1B "If KeyType was 2, they are: 13 7 1 10 4 12 15 3 9"
Comment $78BA "Copy the values of these nine slots into $7A0."


CertainlyCode $7A57 Password_Analysis_Create16bitvalue
Comment $7A57 "Summary so far:"
Comment $7A57 "  slot0 whip   ->  0 in CurrentStage, "
Comment $7A57 "  slot0 cross  ->  4 in CurrentStage, "
Comment $7A57 "  slot0 heart  -> 10 in CurrentStage, data slots are 15,8,7,10,1,5,3,14"
Comment $7A57 "  slot6 whip   ->  8 in CurrentStage, "
Comment $7A57 "  slot6 cross  -> 14 in CurrentStage, "
Comment $7A57 "  slot6 heart  ->  2 in CurrentStage, data slots are 4,2,14,11,7,12,9,1"
Comment $7A57 "  slot13 whip  ->  6 in CurrentStage, "
Comment $7A57 "  slot13 cross -> 16 in CurrentStage, "
Comment $7A57 "  slot13 heart -> 12 in CurrentStage, data slots are 7,1,10,4,12,15,3,9"
Comment $7A57 "Copy data slots into $08-$0F (ignore the keybyte)."
Comment $7A57 "Each slot is 2 bits, so this creates 16 bits of data."
Comment $7A57 ""
Comment $7A63 "Set $01 = concat(bit 0 from each byte)"
Comment $7A63 "Set $00 = concat(bit 1 from each byte)"
Comment $7A7B "Set $789 <- $01 = concat(bit 0 from each byte)"
Comment $7A80 "Set $788 <- $00 = concat(bit 1 from each byte)"
Comment $7A85 "Now $788-789 contains the entire 16 bits of the password."
Comment $7A85 "Set CurrentStage  |= (bit 4) & 1"
CertainlyCode $7AAA Password_Analysis_Step3
Comment $7AAA "If HardMode (bit 0) is set, ignore this step"
Comment $7AB1 "Fail/accept in the following combinations:"
Comment $7AB1 "        Ally 0=Trevor 1=Sypha 2=Grant 3=Alucard"
Comment $7AB1 "Stage    0:  OK       FAIL    FAIL    FAIL"
Comment $7AB1 "Stage    1:  OK       FAIL    FAIL    FAIL"
Comment $7AB1 "Stage    2:  OK       FAIL    OK      FAIL"
Comment $7AB1 "Stage    3:  OK       FAIL    FAIL    FAIL"
Comment $7AB1 "Stage    4:  OK       FAIL    OK      FAIL"
Comment $7AB1 "Stage    5:  OK       OK      OK      FAIL"
Comment $7AB1 "Stage    6:  OK       OK      OK      FAIL"
Comment $7AB1 "Stage    7:  OK       OK      OK      FAIL"
Comment $7AB1 "Stage    8:  OK       FAIL    OK      FAIL"
Comment $7AB1 "Stage    9:  OK       FAIL    OK      FAIL"
Comment $7AB1 "Stage   10:  OK       FAIL    OK      OK"
Comment $7AB1 "Stage   11:  OK       FAIL    OK      OK"
Comment $7AB1 "Stage   12:  OK       FAIL    OK      OK"
Comment $7AB1 "Stage   13:  OK       FAIL    OK      OK"
Comment $7AB1 "Stage   14:  OK       OK      OK      FAIL"
Comment $7AB1 "Stage   15:  OK       OK      OK      OK"
Comment $7AB1 "Stage   16:  OK       OK      OK      OK"
Comment $7AB1 "Stage   17:  OK       OK      OK      OK"
Comment $7AB1 "Stage  18+:  fail password""
Comment $7AC4 "Take Y = ((CurrentStage & 8) >> 3) | (ally*2)"
Comment $7ACE "Take X = ((CurrentStage & 7)"
CertainlyCode $7981 Password_Analysis_Step4
Comment $7981 "HardMode <- bit 0"
Comment $7989 "AllyID   <- ((bits 1 and 2) >> 1), but $FF if zero"
Comment $79AA "$78A     <- ((bits 5,6,7) >> 5) -- must match Hash3bits, or fail"
Comment $7995 "$B995-$B9A0 is redundant copy of operation already done at 7A85"
Comment $79B6 "GrantDefeated <- 1 if PasswordCurrentStage is 2 or 4"
CertainlyCode $7A90 Password_Analysis_Step5
CertainlyCode $7955 Password_Step5helper
Comment $7A90 "$04 = #$A0 if bit 3 set, #$50 otherwise"
Comment $7AA0 "Fail if high bits were not equal to checksum"
Comment $7AA0 "Key = [0x55,0xAA][bit 3]"
Comment $7AA0 "fail if High != checksum, where checksum = "
Comment $7AA0 "CurrentStage + ((((orig^Key)*17)&0xF0)/16 + ((orig*17)&0xF0)"
# Detail of the step5helper:
Comment $7955 "$02 <- (bits 4-7) & 0xF0"
Comment $795C "$03 <- (bits 0-3) << 4"
Comment $7965 "$01 <- $02 + $03"
Comment $796A "A = ($04 ^ $02) + ($04 ^ $03)"
Comment $7977 "A = A >> 4"
Comment $797B "A = A | $01"
Comment $797D "A = A + CurrentStage"
RAM $31  Flag_GrantDefeated
RAM $48  Info_AllyID
RAM $7F6 Flag_HardMode
RAM $78A PasswordOutput_78A_threebit
CertainlyCode $7857 Password_ClearSomeTables
CertainlyCode $7569 Password_Accepted

CertainlyCode $787A Password_Encode
CertainlyCode $7919 Password_Encode_Generate16bit
CertainlyCode $7AEF Password_Encode_GenerateGrid
Comment $7919 "Stagenumber is set to: min(17,CurrentStage)"
Comment $7919 "Password low bits are set to:"
Comment $7919 "  bit    0: hardmode"
Comment $7919 "  bits 1-2: ally id"
Comment $7919 "  bits   3: random bit"
Comment $7919 "  bits   4: stagenumber bit 0"
Comment $7919 "  bits 5-7: three-bit hash"
Comment $7919 "High bits are checksum:"
Comment $7919 "  CurrentStage + (((lobyte^Key)*17)&0xF0)/16 + ((lobyte*17)&0xF0)"
Comment $7919 "  with Key = 0x55 * (bit3 ? 2 : 1)"
Comment $7AEF "Key slot is chosen like this:"
Comment $7AEF "  stages 0,1:  slot0 whip   KeyType=0"
Comment $7AEF "  stages 4,5:  slot0 cross  KeyType=0"
Comment $7AEF "  stages 10,11 slot0 heart  KeyType=0"
Comment $7AEF "  stages 8,9   slot6 whip   KeyType=1"
Comment $7AEF "  stages 14,15 slot6 cross  KeyType=1"
Comment $7AEF "  stages 2,3   slot6 heart  KeyType=1"
Comment $7AEF "  stages 6,7   slot13 whip  KeyType=2"
Comment $7AEF "  stages 16,17 slot13 cross KeyType=2"
Comment $7AEF "  stages 12,13 slot13 heart KeyType=2"
Comment $7AEF "Password slots are written like this:"
Comment $7AEF "  If KeyType=0, slots are 15,8,7,10,1,5,3,14"
Comment $7AEF "  If KeyType=1, slots are 4,2,14,11,7,12,9,1"
Comment $7AEF "  If KeyType=2, slots are 7,1,10,4,12,15,3,9"
Comment $7AEF "Each slot is written one high-bit (bit 0) and one low-bit (bit 1)"
